zscore = site %>%
mutate(zscore = c(2.59, 1.97, 1.66, -1.64,-1.64, -5.23, -1.64,-1.64,-1.64,-1.64))
zscore$zscore = as.factor(zscore$zscore)
qpal <- colorQuantile("RdYlBu", zscore$zscore)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles") %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore") %>%
addLayersControl(overlayGroups = c("circles"))
zscore = site %>%
mutate(zscore = c(2.59, 1.97, 1.66, -1.64,-1.64, -5.23, -1.64,-1.64,-1.64,-1.64))
# zscore$zscore = as.factor(zscore$zscore)
qpal <- colorQuantile("RdYlBu", zscore$zscore)
leaflet(data = zscore)%>%
addTiles() %>%
addCircleMarkers(lng = ~lon,lat =  ~lat, color = ~qpal(zscore), group = "circles") %>%
addLegend("bottomright", pal = qpal, values = ~zscore,
title = "ZSCORE",
labFormat = labelFormat(prefix = "%"),
opacity = 1, labels = FALSE, include.lowest = TRUE )
zscore = site %>%
mutate(zscore = c(2.59, 1.97, 1.66, -1.64,-1.64, -5.23, -1.64,-1.64,-1.64,-1.64))
# zscore$zscore = as.factor(zscore$zscore)
# qpal <- colorQuantile("RdYlBu", zscore$zscore)
#
# leaflet(data = zscore)%>%
#   addTiles() %>%
#   addCircleMarkers(lng = ~lon,lat =  ~lat, color = ~qpal(zscore), group = "circles") %>%
#   addLegend("bottomright", pal = qpal, values = ~zscore,
#     title = "ZSCORE",
#     labFormat = labelFormat(prefix = "%"),
#     opacity = 1, labels = FALSE, include.lowest = TRUE )
pal <- colorNumeric("YlGnBu", zscore$zscore)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles") %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore") %>%
addLayersControl(overlayGroups = c("circles"))
pal <- colorNumeric("RdYlBu", zscore$zscore)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles") %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore") %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles") %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = .25) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles") %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = .25) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 2.25) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20.25) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addLabelOnlyMarkers(lng = ~lon,lat = ~lat, label = ~site)
zscore
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addLabelOnlyMarkers(lng = ~lon,lat = ~lat, label = site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, fill = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addLabelOnlyMarkers(lng = ~lon,lat = ~lat, label = site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addLabelOnlyMarkers(lng = ~lon,lat = ~lat, label = site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addAwesomeMarkers(lng = ~lon, lat = ~lat, popup = ~site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addAwesomeMarkers(lng = ~lon, lat = ~lat, label =  ~site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles")) %>%
addAwesomeMarkers(lng = ~lon, lat = ~lat, popupOptions = ~site)
leaflet(data = zscore) %>%
addTiles() %>%
addCircleMarkers(~lon, ~lat, color = ~pal(zscore), group = "circles", radius = 20) %>%
addLegend(pal = pal, values = ~zscore, group = "circles", position = "bottomleft", title = "Zscore", opacity = 1) %>%
addLayersControl(overlayGroups = c("circles"))
readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1:5 )
readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1 )
readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =2 )
readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1 )
vessels = readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1 )
vessels
vessels %>% slice(1:10)
vessels %>% slice(1:10) %>% select(-X, -Y)
vessels = vessels %>% slice(1:10) %>% select(-X, -Y)
vessels
vessels = readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1 )
vessels = vessels %>% slice(1:10) %>% select(-X, -Y)
vessels
vessels = readxl::read_excel("./DATA  ENTRY SHEET.xls", sheet =1 )
vessels = vessels %>% slice(1:10) %>% select(-X, -Y)
vessels
ggplot(data = vessels, aes(x = FLS_Name, y = Boat, colour = DISTRICT))+ geom_count()
ggplot(data = vessels, aes(x = FLS_Name, y = Boat, colour = DISTRICT))+ geom_col()
ggplot(data = vessels, aes(x = FLS_Name, y = Boat, fill = DISTRICT))+ geom_col()
ggplot(data = vessels, aes(x = FLS_Name, y = Boat, fill = DISTRICT))+ geom_col() + coord_flip()
ggplot(data = vessels %>% arrange(desc(Boat)), aes(x = FLS_Name, y = Boat, fill = DISTRICT))+ geom_col() + coord_flip()
ggplot(data = vessels %>% arrange(desc(Boat)), aes(x = FLS_Name, y = Boat, fill = DISTRICT))+ geom_col() + coord_flip()+
theme_light()
ggplot(data = vessels %>% arrange(desc(Boat)), aes(x = FLS_Name, y = Boat, fill = DISTRICT))+ geom_col() + coord_flip()+
cowplot::theme_cowplot()
vessels
vessels %>% mutate(p.boat = Boat/sum(Boat))
vessels
vessels$Boat = integer(vessels$Boat)
vessels$Boat = as.integer(vessels$Boat)
vessels
vessels %>% mutate(p.boat = Boat/sum(Boat))
vessels %>% mutate(p.boat = Boat/sum(Boat, na.rm = TRUE))
vessels %>% mutate(p.boat = Boat/sum(Boat, na.rm = TRUE)*100)
vessels$Boat = as.integer(vessels$Boat)
vessels$`outrigger canoe` = as.integer(vessels$`outrigger canoe`)
vessels$dugoutcanoe = as.integer(vessels$dugoutcanoe)
vessels$dhow = as.integer(vessels$dhow)
vessels$mashua = as.integer(vessels$mashua)
vessels
vessels %>% transmute(p.boat = Boat/sum(Boat, na.rm = TRUE)*100)
vessels %>% transmute(boat = Boat/sum(Boat, na.rm = TRUE)*100)
vessels
vessels
vessels %>% glimpse()
vessel.p = vessels %>% transmute(boat = Boat/sum(Boat, na.rm = TRUE)*100,
outrigger = `outrigger canoe`/sum(`outrigger canoe`, na.rm = TRUE)*100)
vessel.p
vessels
vessel.p = vessels %>% transmute(boat = Boat/sum(Boat, na.rm = TRUE)*100,
outrigger = `outrigger canoe`/sum(`outrigger canoe`, na.rm = TRUE)*100,
dugout = dugoutcanoe /sum(dugoutcanoe, na.rm = TRUE)*100,
dhow = dhow /sum(dhow, na.rm = TRUE)*100,
mashua = mashua /sum(mashua, na.rm = TRUE)*100)
vessel.p
vessels
vessel.p = vessels %>% transmute(boat = Boat/sum(Boat, na.rm = TRUE)*100,
outrigger = `outrigger canoe`/sum(`outrigger canoe`, na.rm = TRUE)*100,
dugout = dugoutcanoe /sum(dugoutcanoe, na.rm = TRUE)*100,
dhow = dhow /sum(dhow, na.rm = TRUE)*100,
mashua = mashua /sum(mashua, na.rm = TRUE)*100) %>%
bind_cols(vessels %>% select(District = 1, site = 3))
vessel.p
vessel.p = vessels %>% transmute(boat = Boat/sum(Boat, na.rm = TRUE)*100,
outrigger = `outrigger canoe`/sum(`outrigger canoe`, na.rm = TRUE)*100,
dugout = dugoutcanoe /sum(dugoutcanoe, na.rm = TRUE)*100,
dhow = dhow /sum(dhow, na.rm = TRUE)*100,
mashua = mashua /sum(mashua, na.rm = TRUE)*100) %>%
bind_cols(vessels %>% select(District = 1, site = 3)) %>%
gather(key = "gear", value = "percentage", 1:5)
vessel.p
ggplot(data - vessel.p, aes(x = site, y = percentage, col = District))+ geom_col()
ggplot(data - vessel.p, aes(x = site, y = percentage, col = District))+ geom_bar()
ggplot(data = vessel.p, aes(x = site, y = percentage, col = District))+ geom_col()
ggplot(data = vessel.p, aes(x = site, y = percentage, fill = District))+ geom_col()
ggplot(data = vessel.p, aes(x = site, y = percentage, fill = gear))+ geom_col()
ggplot(data = vessel.p, aes(x = site, y = percentage, fill = gear))+ geom_col()+coord_flip()
ggplot(data = vessel.p, aes(x = site, y = percentage, fill = gear))+ geom_col(position = "dodge")+coord_flip()
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage, fill = gear))+ geom_col(position = "dodge")+coord_flip()
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage, fill = gear))+ geom_col(position = "dodge")+coord_flip()+
facet_wrap(~site)
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage, fill = gear))+ geom_col(position = "dodge")+coord_flip()+
facet_wrap(~District)
vessel.p
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage, fill = gear))+ geom_col(position = "dodge")+coord_flip()+
facet_wrap(~gear)
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage))+ geom_col(position = "dodge")+coord_flip()+
facet_wrap(~gear)
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage))+ geom_col(position = "dodge")+
facet_wrap(~gear)
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage))+ geom_col(position = "dodge")+
facet_wrap(~gear, scales = "free")
ggplot(data = vessel.p %>% filter(District == "BAGAMOYO"), aes(x = site, y = percentage))+ geom_col(position = "dodge")+
facet_wrap(~gear, scales = "free_y")
bookdown::html_book()
bookdownplus::get_output()
bookdownplus::get_output("gitbook")
bookdownplus::get_output(dataframe = FALSE)
bookdownplus::get_output(dataframe = FALSE, "html_document2")
bookdown::serve_book()
serve_book()
serve_book()
serve_book()
library(bookdown)
serve_book()
install.packages("servr")
serve_book()
update.packages("xfun")
update.packages("xfun")
install.packages("xfun")
serve_book()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
remove.packages("xfun")
install.packages("xfun")
xfun
install.packages("xfun")
library(bookdown)
serve_book()
serve_book()
serve_book()
study_area <- st_read("C:/Users/admin/Downloads/BD_boundary/BD_new_martime_boundary.shp")
library(leaflet)
install.packages("leaflet")
library(leaflet)
library(sf)
install.packages("sf")
library(dplyr)
# Sample data
sample_data <- data.frame(
Date = c(rep("02-12-19", 6), rep("06-12-19", 6)),
SamplingPoint = c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"),
Latitude = c(20.00, 20.02, 20.03, 20.05, 20.08, 21.03, 20.98, 20.81, 20.65, 20.48, 20.31, 20.15),
Longitude = c(89.47, 89.47, 89.47, 89.47, 89.47, 89.47, 89.53, 89.53, 89.53, 89.53, 89.53, 89.53),
InSituPOC = c(72.6, 81.07, 87.12, 93.17, 105.27, 162.14, 75.02, 62.92, 66.55, 71.39, 64.13, 59.29),
MODISDerivedPOC = c(68.69, 58, 69, 92, 195, 462, 164, 113, 132, 105, 81, 60),
Depth = c(1221, 1112, 208, 133, 110, 311, 92, 115, 150, 144, 250, 1130)
)
# Convert data to sf object
sf_sample_data <- st_as_sf(sample_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Load required libraries
library(sf)
library(leaflet)
# Create a data frame with the sample data
sample_data <- data.frame(
Date = c("02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19"),
Sampling_point = c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"),
Latitude = c(20.00, 20.02, 20.03, 20.05, 20.08, 21.03, 20.98, 20.81, 20.65, 20.48, 20.31, 20.15),
Longitude = c(89.47, 89.47, 89.47, 89.47, 89.47, 89.47, 89.53, 89.53, 89.53, 89.53, 89.53, 89.53),
In_situ_POC_value = c(72.6, 81.07, 87.12, 93.17, 105.27, 162.14, 75.02, 62.92, 66.55, 71.39, 64.13, 59.29),
MODIS_derived_POC = c(68.69, 58, 69, 92, 195, 462, 164, 113, 132, 105, 81, 60),
Depth_m = c(1221, 1112, 208, 133, 110, 311, 92, 115, 150, 144, 250, 1130)
)
sample_data
# Convert the data frame to an sf object
sf_sample_data <- st_as_sf(sample_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Create leaflet map
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(data = study_area, fillOpacity = 0.3) %>%
addCircleMarkers(data = sf_sample_data, radius = 5, color = "red", fill = TRUE, fillOpacity = 1) %>%
addPopups(
sf_sample_data$Sampling_point,
lat = sf_sample_data$Latitude,
lng = sf_sample_data$Longitude,
popup = ~paste(
"<strong>Date:</strong>", Date,
"<br><strong>Sampling Point:</strong>", Sampling_point,
"<br><strong>In-situ POC value:</strong>", In_situ_POC_value,
"<br><strong>MODIS derived POC:</strong>", MODIS_derived_POC,
"<br><strong>Depth:</strong>", Depth_m, "m"
)
)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addCircleMarkers(popup = ~paste("Sampling Point: ", SamplingPoint, "<br>",
"Date: ", Date, "<br>",
"In-Situ POC: ", InSituPOC, " mgm-3<br>",
"MODIS Derived POC: ", MODISDerivedPOC, " mgm-3<br>",
"Depth: ", Depth, " m")),
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addMarkers(lng = ~longitude, lat = ~latitude, popup = ~sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addTiles("") %>%
addMarkers(lng = ~longitude, lat = ~latitude, popup = ~sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addTiles("") %>%
addMarkers(lng = ~longitude, lat = ~latitude, popup = ~sf_sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addTiles("") %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~sf_sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addTiles() %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~sf_sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~sf_sample_data)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~Longitude, lat = ~Latitude, popup = ~sf_sample_data)
serve_book()
library(sf)
library(leaflet)
# Create a data frame with the sample data
sample_data <- data.frame(
Date = c("02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19"),
Sampling_point = c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"),
Latitude = c(20.00, 20.02, 20.03, 20.05, 20.08, 21.03, 20.98, 20.81, 20.65, 20.48, 20.31, 20.15),
Longitude = c(89.47, 89.47, 89.47, 89.47, 89.47, 89.47, 89.53, 89.53, 89.53, 89.53, 89.53, 89.53),
In_situ_POC_value = c(72.6, 81.07, 87.12, 93.17, 105.27, 162.14, 75.02, 62.92, 66.55, 71.39, 64.13, 59.29),
MODIS_derived_POC = c(68.69, 58, 69, 92, 195, 462, 164, 113, 132, 105, 81, 60),
Depth_m = c(1221, 1112, 208, 133, 110, 311, 92, 115, 150, 144, 250, 1130)
)
# Convert the data frame to an sf object
sf_sample_data <- st_as_sf(sample_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~ sf_sample_data)
library(sf)
library(leaflet)
# Create a data frame with the sample data
sample_data <- data.frame(
Date = c("02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19"),
Sampling_point = c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"),
Latitude = c(20.00, 20.02, 20.03, 20.05, 20.08, 21.03, 20.98, 20.81, 20.65, 20.48, 20.31, 20.15),
Longitude = c(89.47, 89.47, 89.47, 89.47, 89.47, 89.47, 89.53, 89.53, 89.53, 89.53, 89.53, 89.53),
In_situ_POC_value = c(72.6, 81.07, 87.12, 93.17, 105.27, 162.14, 75.02, 62.92, 66.55, 71.39, 64.13, 59.29),
MODIS_derived_POC = c(68.69, 58, 69, 92, 195, 462, 164, 113, 132, 105, 81, 60),
Depth_m = c(1221, 1112, 208, 133, 110, 311, 92, 115, 150, 144, 250, 1130)
)
# Convert the data frame to an sf object
sf_sample_data <- st_as_sf(sample_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~ sf_sample_data)
serve_book()
# Your R code here
library(sf)
library(leaflet)
# Create a data frame with the sample data
sample_data <- data.frame(
Date = c("02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "02-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19", "06-12-19"),
Sampling_point = c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"),
Latitude = c(20.00, 20.02, 20.03, 20.05, 20.08, 21.03, 20.98, 20.81, 20.65, 20.48, 20.31, 20.15),
Longitude = c(89.47, 89.47, 89.47, 89.47, 89.47, 89.47, 89.53, 89.53, 89.53, 89.53, 89.53, 89.53),
In_situ_POC_value = c(72.6, 81.07, 87.12, 93.17, 105.27, 162.14, 75.02, 62.92, 66.55, 71.39, 64.13, 59.29),
MODIS_derived_POC = c(68.69, 58, 69, 92, 195, 462, 164, 113, 132, 105, 81, 60),
Depth_m = c(1221, 1112, 208, 133, 110, 311, 92, 115, 150, 144, 250, 1130)
)
# Convert the data frame to an sf object
sf_sample_data <- st_as_sf(sample_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~ sf_sample_data)
serve_book()
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addPopups(sf_sample_data$Sampling_point,
lat = sf_sample_data$Latitude,
lng = sf_sample_data$Longitude,
popup = ~paste(
"<strong>Date:</strong>", Date,
"<br><strong>Sampling Point:</strong>", Sampling_point,
"<br><strong>In-situ POC value:</strong>", In_situ_POC_value,
"<br><strong>MODIS derived POC:</strong>", MODIS_derived_POC,
"<br><strong>Depth:</strong>", Depth_m, "m"
)
)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = ~ sf_sample_data$Sampling_point)
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude, popup = paste("Region",
sample_data$In_situ_POC_value))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station", sample_data$Sampling_point, "br",
"Date", sample_data$Date, "br",
))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station", sample_data$Sampling_point, "br",
"Date", sample_data$Date, "br"
))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station", sample_data$Sampling_point, "<br>",
"Date", sample_data$Date, "br"
))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station:", sample_data$Sampling_point, "<br>",
"Sampling Date:", sample_data$Date, "<br>",
"Depth:", sample_data$Depth_m,"<br>",
"POC (in-situ):", sample_data$In_situ_POC_value
))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station:", sample_data$Sampling_point, "<br>",
"Sampling Date (dd/mm/yyyy):", sample_data$Date, "<br>",
"Depth (m):", sample_data$Depth_m,"<br>",
"POC (in-situ):", sample_data$In_situ_POC_value
))
# Create leaflet map
leaflet(sf_sample_data) %>%
addProviderTiles(providers$Esri.OceanBasemap) %>%
addMarkers(lng = ~sample_data$Longitude, lat = ~sample_data$Latitude,
popup = paste("Station:", sample_data$Sampling_point, "<br>",
"Sampling Date (dd/mm/yyyy):", sample_data$Date, "<br>",
"Depth (m):", sample_data$Depth_m,"<br>",
"POC (in-situ) [mg/m-3]:", sample_data$In_situ_POC_value
))
install.packages("DiagrammeR")
library(DiagrammeR)
# Define the steps in the process
steps <- c("MODIS Aqua Satellite Data", "Rasterization", "Cropped Data",
"Display Statistics for a Selected Band", "Value Retrieved",
"Mean, Minimum, Maximum Value")
# Create a diagram
graph <- create_graph(directed = TRUE) %>%
add_nodes(nodes = steps) %>%
add_edges(from = c(1, 2, 3, 4, 5), to = c(2, 3, 4, 5, 6))
# Render the diagram
render_graph(graph)
# Define the steps in the process
steps <- c("MODIS Aqua Satellite Data", "Rasterization", "Cropped Data",
"Display Statistics for a Selected Band", "Value Retrieved",
"Mean, Minimum, Maximum Value")
# Create a diagram
graph <- create_graph(directed = TRUE) %>%
add_nodes(nodes = steps) %>%
add_edges_arrows(from = c(1, 2, 3, 4, 5), to = c(2, 3, 4, 5, 6))
# Create a diagram
graph <- create_graph(directed = TRUE) %>%
add_nodes(nodes = steps) %>%
add_edges(from = c(1, 2, 3, 4, 5), to = c(2, 3, 4, 5, 6))
a_graph <-
create_graph() %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2)
a_graph
serve_book()
bookdown::clean_book()
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
serve_book()
